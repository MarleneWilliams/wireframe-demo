//
// Media queries
//

// Respond-to
@mixin respond-to($target) {
  // For tablet on up
  @if $target == tablet {
    @media #{$small} {
      @content;
    }
    // For IE versions less-than-9, so they can get the media query styles
    .lt-ie9 &{
      @content;
    }
  }
  // For desktop on up
  @if $target == desktop {
    @media #{$medium} {
      @content;
    }
    // For IE versions less-than-9, so they can get the media query styles
    // Giving it more specificity than tablets
    html.lt-ie9 &{
      @content;
    }
  }
  // For widescreen
  @if $target == widescreen {
    @media #{$large} {
      @content;
    }
    // For IE versions less-than-9, so they can get the media query styles
    // Giving it more specificity than tablets
    html.lt-ie9 body &{
      @content;
    }
  }
  // For IE9 and down
  @if $target == ie9 {
    .lt-ie10 &{
      @content;
    }
  }
  // For IE8 and down
  @if $target == ie8 {
    .lt-ie9 &{
      @content;
    }
  }
  // For IE7 and down
  @if $target == ie7 {
    .lt-ie8 &{
      @content;
    }
  }
  // For print
  @if $target == print {
    // Allow us to generate a separate print stylesheet
    $print-styles: false !default;
    @if $print-styles {
      @content;
    }
    // Also put styles in a print media query
    @media #{$print-media} {
      @content;
    }
  }
}

// Making elements align in a grid, regardless of height
// Apply to elements you want as grid items
// $cols = how many columns you want
// $margin-right = margin-right, should be in percent
// $ie8-height = an explicit height for all the elements
@mixin gridify($cols, $margin-right: 5%, $ie8-height: auto) {
  $width: (100% / $cols) - $margin-right + ($margin-right / $cols);
  $clearnum: $cols + 1;

  clear: none;
  display: block;
  float: left;
  margin-right: $margin-right;
  width: $width;

  // Resetting from any previous uses of this mixin
  &:nth-child(odd),
  &:nth-child(even) {
    clear: none;
    margin-right: $margin-right;
  }

  // Clear the rows
  &:nth-child(#{$cols}n+#{$clearnum}) {
    clear: left;
  }
  // Remove margin-right from last column
  &:nth-child(#{$cols}n+#{$cols}) {
    margin-right: 0;
  }

  // Fix for IE8
  .ie-8 & {
    height: $ie8-height;
  }
}

// Placeholder
@mixin placeholder($height, $width, $bgc: $gray) {
  @include transition(background-color .25s);
  background-color: $bgc;
  height: $height;
  margin-bottom: 1em;
  max-width: 100%;
  width: $width;
  &:hover {
    background-color: lighten($bgc, 5%);
  }
}

// Experimental - Padded box
@mixin padded-box($color) {
  background-color: $color;
  border-bottom: 1px solid darken($color, 10%);
  margin-bottom: 1em;
  padding: .75em;
}
@mixin padded-box-remove {
  background-color: transparent;
  border-bottom: 0 none;
  margin-bottom: 0;
  padding: 0;
}