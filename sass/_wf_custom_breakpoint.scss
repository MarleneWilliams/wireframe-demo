
// Create 'tiny' column rules (copied from components/_grid.scss)
@media #{$tiny} {
  @for $i from 1 through $total-columns {
    .tiny#{-$i} { @include grid-column($columns:$i,$collapse:null,$float:false); }
  }

  @for $i from 0 through $total-columns - 1 {
    .row .tiny-offset-#{$i} { @include grid-column($offset:$i, $collapse:null,$float:false); }
  }

  @for $i from 1 through $total-columns - 1 {
    .push#{-$i} { @include grid-column($push:$i, $collapse:null, $float:false); }
    .pull#{-$i} { @include grid-column($pull:$i, $collapse:null, $float:false); }
  }

  .column.tiny-centered,
  .columns.tiny-centered { @include grid-column($center:true, $collapse:null, $float:false); }

  .column.tiny-uncentered,
  .columns.tiny-uncentered {
    margin-#{$default-float}: 0;
    margin-#{$opposite-direction}: 0;
    float: $default-float !important;
  }

  .column.tiny-uncentered.opposite,
  .columns.tiny-uncentered.opposite {
    float: $opposite-direction !important;
  }
}

// Visibility classes
@media #{$not-tiny} {
  .show-for-tiny { display: none !important; }
}
@media #{$tiny} {
  .show-for-tiny {
    display: inherit !important;
  }
  .show-for-small,
  .show-for-medium,
  .show-for-large,
  .show-for-xlarge { display: none !important; }

  .show-for-small-down,
  .show-for-medium-down,
  .show-for-large-down,
  .show-for-xlarge-down { display: inherit !important; }

  .hide-for-tiny { display: none !important; }
}
@media #{$small} {
  .show-for-tiny { display: none !important; }
}
@media #{$large} {
  .show-for-tiny { display: none !important; }
}
